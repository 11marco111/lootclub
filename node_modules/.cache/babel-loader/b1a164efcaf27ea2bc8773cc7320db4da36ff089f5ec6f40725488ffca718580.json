{"ast":null,"code":"// Inizia la registrazione del service worker\n// Questo codice è fornito da Create React App per abilitare la PWA\nconst isLocalhost=Boolean(window.location.hostname==='localhost'||window.location.hostname==='[::1]'||window.location.hostname==='127.0.0.1');export function register(){if(process.env.NODE_ENV==='production'&&'serviceWorker'in navigator){const swUrl=`${process.env.PUBLIC_URL}/service-worker.js`;if(isLocalhost){checkValidServiceWorker(swUrl);}else{registerValidSW(swUrl);}}}function registerValidSW(swUrl){navigator.serviceWorker.register(swUrl).then(()=>{console.log('Service Worker registrato');}).catch(error=>{console.error('Errore durante la registrazione del Service Worker:',error);});}function checkValidServiceWorker(swUrl){fetch(swUrl).then(response=>{if(response.status===404||response.type==='error'){navigator.serviceWorker.ready.then(registration=>{registration.unregister().then(()=>{window.location.reload();});});}else{registerValidSW(swUrl);}}).catch(()=>{console.log('Nessun internet disponibile, la PWA non è attivata');});}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","register","process","env","NODE_ENV","navigator","swUrl","PUBLIC_URL","checkValidServiceWorker","registerValidSW","serviceWorker","then","console","log","catch","error","fetch","response","status","type","ready","registration","unregister","reload"],"sources":["C:/Users/user/lootclub/src/serviceWorkerRegistration.js"],"sourcesContent":["// Inizia la registrazione del service worker\n// Questo codice è fornito da Create React App per abilitare la PWA\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname === '127.0.0.1'\n);\n\nexport function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n    if (isLocalhost) {\n      checkValidServiceWorker(swUrl);\n    } else {\n      registerValidSW(swUrl);\n    }\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(() => {\n      console.log('Service Worker registrato');\n    })\n    .catch((error) => {\n      console.error('Errore durante la registrazione del Service Worker:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  fetch(swUrl)\n    .then((response) => {\n      if (response.status === 404 || response.type === 'error') {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('Nessun internet disponibile, la PWA non è attivata');\n    });\n}\n"],"mappings":"AAAA;AACA;AACA,KAAM,CAAAA,WAAW,CAAGC,OAAO,CACzBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,EACtCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,OAAO,EACpCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WACjC,CAAC,CAED,MAAO,SAAS,CAAAC,QAAQA,CAAA,CAAG,CACzB,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,EAAI,eAAe,EAAI,CAAAC,SAAS,CAAE,CACzE,KAAM,CAAAC,KAAK,CAAG,GAAGJ,OAAO,CAACC,GAAG,CAACI,UAAU,oBAAoB,CAE3D,GAAIX,WAAW,CAAE,CACfY,uBAAuB,CAACF,KAAK,CAAC,CAChC,CAAC,IAAM,CACLG,eAAe,CAACH,KAAK,CAAC,CACxB,CACF,CACF,CAEA,QAAS,CAAAG,eAAeA,CAACH,KAAK,CAAE,CAC9BD,SAAS,CAACK,aAAa,CACpBT,QAAQ,CAACK,KAAK,CAAC,CACfK,IAAI,CAAC,IAAM,CACVC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAC1C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChBH,OAAO,CAACG,KAAK,CAAC,qDAAqD,CAAEA,KAAK,CAAC,CAC7E,CAAC,CAAC,CACN,CAEA,QAAS,CAAAP,uBAAuBA,CAACF,KAAK,CAAE,CACtCU,KAAK,CAACV,KAAK,CAAC,CACTK,IAAI,CAAEM,QAAQ,EAAK,CAClB,GAAIA,QAAQ,CAACC,MAAM,GAAK,GAAG,EAAID,QAAQ,CAACE,IAAI,GAAK,OAAO,CAAE,CACxDd,SAAS,CAACK,aAAa,CAACU,KAAK,CAACT,IAAI,CAAEU,YAAY,EAAK,CACnDA,YAAY,CAACC,UAAU,CAAC,CAAC,CAACX,IAAI,CAAC,IAAM,CACnCb,MAAM,CAACC,QAAQ,CAACwB,MAAM,CAAC,CAAC,CAC1B,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,IAAM,CACLd,eAAe,CAACH,KAAK,CAAC,CACxB,CACF,CAAC,CAAC,CACDQ,KAAK,CAAC,IAAM,CACXF,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC,CACnE,CAAC,CAAC,CACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}