{"ast":null,"code":"import React,{useEffect,useState}from'react';import{db}from'../firebase/firebase';import{doc,getDoc}from'firebase/firestore';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function XPSystem(_ref){let{uid}=_ref;const[xp,setXp]=useState(0);useEffect(()=>{const fetchXP=async()=>{try{const userRef=doc(db,'users',uid);const userSnap=await getDoc(userRef);if(userSnap.exists()){setXp(userSnap.data().xp||0);}}catch(error){console.error('Errore nel recupero XP:',error);}};if(uid)fetchXP();},[uid]);const getLevel=xp=>Math.floor(Math.sqrt(xp/100)+1);// Esempio formula livello\nconst getBadge=level=>{if(level>=20)return'üî• LEGGENDA';if(level>=10)return'üíé PRO';if(level>=5)return'‚≠ê INTERMEDIO';return'üéØ NOVIZIO';};const level=getLevel(xp);const nextLevelXP=Math.pow(level,2)*100;const currentLevelXP=Math.pow(level-1,2)*100;const progress=(xp-currentLevelXP)/(nextLevelXP-currentLevelXP)*100;return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-white rounded shadow max-w-md mx-auto mt-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-center\",children:\"\\uD83C\\uDFAE Progressione XP\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-2\",children:[\"Livello: \",/*#__PURE__*/_jsx(\"strong\",{children:level})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-2\",children:[\"Badge: \",/*#__PURE__*/_jsx(\"span\",{children:getBadge(level)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-4 overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-4\",style:{width:progress+'%'}})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-center mt-2 text-sm text-gray-600\",children:[xp,\" XP\"]})]});}export default XPSystem;","map":{"version":3,"names":["React","useEffect","useState","db","doc","getDoc","jsx","_jsx","jsxs","_jsxs","XPSystem","_ref","uid","xp","setXp","fetchXP","userRef","userSnap","exists","data","error","console","getLevel","Math","floor","sqrt","getBadge","level","nextLevelXP","pow","currentLevelXP","progress","className","children","style","width"],"sources":["C:/Users/user/lootclub/src/pages/XPSystem.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc } from 'firebase/firestore';\n\nfunction XPSystem({ uid }) {\n  const [xp, setXp] = useState(0);\n\n  useEffect(() => {\n    const fetchXP = async () => {\n      try {\n        const userRef = doc(db, 'users', uid);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) {\n          setXp(userSnap.data().xp || 0);\n        }\n      } catch (error) {\n        console.error('Errore nel recupero XP:', error);\n      }\n    };\n\n    if (uid) fetchXP();\n  }, [uid]);\n\n  const getLevel = (xp) => Math.floor(Math.sqrt(xp / 100) + 1); // Esempio formula livello\n  const getBadge = (level) => {\n    if (level >= 20) return 'üî• LEGGENDA';\n    if (level >= 10) return 'üíé PRO';\n    if (level >= 5) return '‚≠ê INTERMEDIO';\n    return 'üéØ NOVIZIO';\n  };\n\n  const level = getLevel(xp);\n  const nextLevelXP = Math.pow(level, 2) * 100;\n  const currentLevelXP = Math.pow(level - 1, 2) * 100;\n  const progress = ((xp - currentLevelXP) / (nextLevelXP - currentLevelXP)) * 100;\n\n  return (\n    <div className=\"p-4 bg-white rounded shadow max-w-md mx-auto mt-4\">\n      <h2 className=\"text-xl font-bold text-center\">üéÆ Progressione XP</h2>\n      <div className=\"text-center mt-2\">Livello: <strong>{level}</strong></div>\n      <div className=\"text-center mb-2\">Badge: <span>{getBadge(level)}</span></div>\n      <div className=\"w-full bg-gray-200 rounded-full h-4 overflow-hidden\">\n        <div\n          className=\"bg-blue-600 h-4\"\n          style={{ width: progress + '%' }}\n        ></div>\n      </div>\n      <p className=\"text-center mt-2 text-sm text-gray-600\">{xp} XP</p>\n    </div>\n  );\n}\n\nexport default XPSystem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}